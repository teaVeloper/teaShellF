# ==========================================================================
#                                                                           |
#                        TMUX Configuration                                 |
#                                                                           |
# ==========================================================================

# General options {{{

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Make a smaller delay so we can perform commands after switching windows
set -sg escape-time 0
set -sg repeat-time 400


# automatically renumber windows
set-option -g renumber-windows on

# stop tmux renaming windows
set -g allow-rename off

# set default shell for tmux to zsh
set -g default-shell /usr/bin/zsh

# Window title begins by 1 and not 0
set -g base-index 1
set -g pane-base-index 1

# History
set-option -g history-limit 260000

# default Terminal 256 color mode
set-option -g default-terminal "tmux-256color"

# Add truecolor support (tmux info | grep Tc)
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Default to mouse of
set -g mouse off

# }}}

# Key bindings {{{

# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a


# Ensure that we can send `Ctrl-a` to other apps.
bind a send-prefix


# force a reload of the config file
unbind r
# bind r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display "Reloaded tmux conf"
# until XDG ist set
bind r source-file "$HOME/.tmux.conf" \; display "Reloaded tmux conf"


# set window split
# TODO (Berti): Review this options
# unbind v
# unbind h
# unbind %
# unbind '"'
# bind v split-window -h -c "#{pane_current_path}"
# bind h split-window -c "#{pane_current_path}"

# vim pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
# TODO (Berti):  Review if above or below is nicer -> interaction with vim, ctr+l clear screen!
# maybe Meta instead of C

# Moving between panes.
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R


# shift-movement keys will resize panes
bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

# use / for last
bind / last

# mouse toggling can be handy
bind m \
    set -g mouse on \; \
    display 'Mouse: ON'

bind M \
    set -g mouse off \; \
    display 'Mouse: OFF'

# panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one


# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind - split-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"

#vim key mode
set-window-option -g mode-keys vi
bind -Tcopy-mode-vi 'v' send -X begin-selection
# copy selected selection with y - if using the mouse `y` need to be used before releasing the mouse button
bind -Tcopy-mode-vi 'y' send -X copy-selection

# Copy tmux copy to clipboard (need xsel - possible to use xclip as well)
unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
unbind ]

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

#kill session
bind X confirm-before kill-session

# }}}

# Design & Statusline {{{

# TODO (Berti): Settings copied --> Review and adapt
# panes
set -g pane-border-style fg=black
set -g pane-active-border-style fg=red

## Status bar design
# status line
set -g status-justify left
#set -g status-bg default
set -g status-style fg=blue
set -g status-interval 2

# messaging
set -g message-command-style fg=blue,bg=black

# window mode
setw -g mode-style bg=green,fg=black

# window status
# setw -g window-status-format " #F#I:#W#F "
# setw -g window-status-current-format " #F#I:#W#F "
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=white] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=white] #I #[fg=white]#[bg=cyan] #W "
# setw -g window-status-current-style bg=black,fg=yellow,dim
# setw -g window-status-style bg=green,fg=black,reverse


# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
set-window-option -g monitor-activity off
set -g bell-action none

# The modes
set-window-option -g clock-mode-colour red
set-window-option -g mode-style fg=red,bg=black,bold

# The panes
set -g pane-border-style bg=black,fg=black
set -g pane-active-border-style fg=blue,bg=black

# The statusbar
set -g status-position bottom
set -g status-style bg=black,fg=yellow,dim
set -g status-left ''
set -g status-right '#{?client_prefix,#[fg=white]#[bg=red]#[bold] - PREFIX - ,#[fg=brightwhite]#H}'

set -g status-right-length 50
set -g status-left-length 20

# The window

# Active Window title color
set-window-option -g window-status-current-style fg=red,bg=black,bold
set-window-option -g window-status-current-format ' #{?window_zoomed_flag,#[fg=red]#[bg=grey] Z,#[fg=red]} #I#[fg=brightwhite]:#[fg=brightwhite]#W '

# Default Window title color
set-window-option -g window-status-style fg=magenta,bg=black,none
set-window-option -g window-status-format ' #I#[fg=yellow]:#[fg=yellow]#W#[fg=yellow]#F '

set-window-option -g window-status-bell-style fg=white,bg=red,bold

# The messages
set -g message-style fg=white,bg=red,bold

# }}}

# Plugins {{{

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-pain-control'
# set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'laktak/extrakto'


set -g @resurrect-dir '~/.config/tmux/plugins/resurrect'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'

## -------------- update plugins ----------------------------
##  Installing plugins
##
##    Add new plugin to ~/.tmux.conf with set -g @plugin '...'
##     Press prefix + I (capital i, as in Install) to fetch the plugin.
##
##    Remove (or comment out) plugin from the list.
##     Press prefix + alt + u (lowercase u as in uninstall) to remove the plugin.
##
## prefix + I
##  Installs new plugins from GitHub or any other git repository
##  Refreshes TMUX environment
## prefix + U
##  updates plugin(s)
## prefix + alt + u
##  remove/uninstall plugins not on the plugin list
##
## ----------------------------------------------------------
# }}}

# Overwrite Plugin Configs! {{{
bind-key l if-shell "$is_vim" "send-keys C-l"  "send-keys C-l"


# }}}
